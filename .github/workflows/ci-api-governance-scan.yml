
# This is a starter workflow to help you get started with API governance-Scan Actions

name: 1 - CI - API governance validation

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # Customize trigger events based on your DevSecOps processes.
  #push:
   # branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  Trigger_API_governance_scan:
    runs-on: ubuntu-latest
    steps:
   # Checkout from github to runner container.
       - uses: actions/checkout@v3
   # Setup nodejs on runner container.
       - uses: actions/setup-node@v1
   # Install anypoint-cli on runner container.
       - run: npm install -g anypoint-cli@latest
   # Run api governance validation meetup-best-practices-1.0.0-ruleset-1 over HelloWorl API.
       - run: |
            cd ci-cd-meetup-live-api-validation-example
            zip  -b ./hello-meetup/src/main/resources/api api.zip ./hello-meetup/src/main/resources/api/api.raml
            anypoint-cli governance api validate ./RULESETS/meetup-best-practices-1.0.0-ruleset-1/meetup_custom_ruleset_1.yaml ./hello-meetup/src/main/resources/api/api.zip > resultado_revision_api_spec.txt
            encontrado=$(cat resultado_revision_api_spec.txt | grep -i "Spec does not conform with Ruleset")
            echo $encontrado
            encontrado=$(cat resultado_revision_api_spec.txt | grep -i "Spec conform with Ruleset")
            echo $encontrado
         env:
            ANYPOINT_USERNAME: ${{ secrets.ANYPOINT_USERNAME }}
            ANYPOINT_PASSWORD: ${{ secrets.ANYPOINT_PASSWORD }}
            ANYPOINT_ORG: ${{ secrets.ANYPOINT_ORG }}
         
            # Spec conforms with Ruleset
            # ... Spec does not conform with Ruleset ...
         
